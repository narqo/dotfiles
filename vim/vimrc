" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

filetype on
syntax on

set tabstop=4
set softtabstop=4
set shiftwidth=4
set autoindent
set smartindent
set shiftround
" Ставим табы пробелами
set expandtab

set backspace=indent,eol,start

" Make cmdline tab completion similar to bash
set wildmenu
set wildmode=list:longest
set wildignore=*.o,*.obj,*~,*.pyc,*.pyo,*.bak
" This feature is availble since Vim 7.3.072
"if v:version >= 703
"    " Make it easier to complete buffers, open files, etc...
"    set wildignorecase
"endif

set cursorline
set number

" Hide buffers when not displayed
set hidden

" Automaticaly set cwd to opened buffer
"set autochdir

" Show the cursor position all the time
set ruler

" Jump N lines when running out of the screen
set scrolljump=7
set scrolloff=10
set sidescrolloff=10
set sidescroll=1

" Turn off any bells
set novisualbell
set t_vb=

" Fix <Enter> for comment
set fo+=cr

" Выключаем перенос строк
set nowrap
set nolinebreak

" Отборажение текущей комманды
set showcmd

set ttyfast

" Включаем отображение дополнительной информации в статусной строке
set laststatus=2
set statusline=%f%h\ %y\ %m\ %r\ %{&encoding}\ 

" The statusline flag for syntastic plugin
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

set statusline+=%=Line:%l/%L[%p%%]\ Col:%c\ [%b][0x%B]
set statusline+=\ Buf:%n\ 

" Включить подсветку невидимых символов
set list
" Настройка подсветки невидимых символов
set listchars=tab:·\ ,trail:·,extends:»,precedes:«

" Show ↪ at the beginning of wrapped lines
if has("linebreak")
    let &sbr = nr2char(8618).' '
endif


" Открывать новое окно справа по-вертикали :vsp
set splitright
" Открывать новое окно ниже текущего :sp
set splitbelow

" Set the textwidth to be 80 chars
set textwidth=0

if version >= 703
    " mark the ideal max text width
    set colorcolumn=+1
end

"if has("autocmd")
"    autocmd! bufwritepost .vimrc source $MYVIMRC
"endif


""" ПОИСК

" Включаем подсветку выражения, которое ищется в тексте
set hlsearch
" При поиске перескакивать на найденный текст в процессе набора строки
set incsearch
" Останавливать поиск при достижении конца файла
set nowrapscan
" Игнорировать регистр букв при поиске
set ignorecase


" Размер истории для отмены
set undolevels=100

set encoding=utf-8
" Кодировка по-умолчанию
set termencoding=utf-8
" Список кодировок файлов для автоопределения
set fileencodings=utf-8,cp1251,koi8-r,cp866
" Список форматов файлов
set fileformats=unix,dos,mac

" Проверка орфографии
if version >= 700
    set spell spelllang=
    " по умолчанию проверка орфографии выключена
    set nospell
    menu Spell.off :setlocal spell spelllang= <cr>
    menu Spell.Russian+English :setlocal spell spelllang=ru,en <cr>
    menu Spell.Russian :setlocal spell spelllang=ru <cr>
    menu Spell.English :setlocal spell spelllang=en <cr>
    menu Spell.-SpellControl- :
    menu Spell.Word\ Suggest<Tab>z= z=
    menu Spell.Previous\ Wrong\ Word<Tab>[s [s
    menu Spell.Next\ Wrong\ Word<Tab>]s ]s
endif


"load ftplugins and indent files
filetype plugin on
filetype indent on

" Метод фолдинга - вручную (для обычных файлов)
set foldmethod=manual
" Уровень сокрытия по умолчанию для вновь открытых файлов
"setlocal foldlevelstart=0
" Метод фолдинга - по синтаксису
"setlocal foldmethod=syntax

" Не показывать парные <> в HTML
set noshowmatch


"" BACKUP

" Отключаем создание бэкапов
set nobackup
" Отключаем создание swap файлов
set noswapfile
" Все swap файлы будут помещаться в эту папку
"set dir=~/.vim/swp


"" DIFF

" Add ignorance of whitespace to diff
set diffopt=filler,iwhite,vertical,context:15
let g:html_diff_one_file = 1


"" KEY MAPS

let mapleader = ","

" Очистить подсветку последнего найденного выражения
nmap <F3> :nohlsearch<CR>
imap <F3> <Esc>:nohlsearch<CR>
vmap <F3> <Esc>:nohlsearch<CR>gv

" Auto compleate
imap <C-space> <C-x><C-o>

vmap <C-C> "+yi
imap <C-V> <esc>"+gPi

" Make horizontal scrolling easier
nmap <silent> <C-o> 10zl
nmap <silent> <C-i> 10zh

" Key mapping for saving file
nmap <C-s> :w<CR>

" Add a GUID to the current line
imap <C-J>d <C-r>=substitute(system("uuidgen"), '.$', '', 'g')<CR>

" Вставлять код извне
set pastetoggle=<Leader>p

" Insert new line
imap <S-Cr> <C-o>o
imap <C-S-Cr> <C-o>O

" Move line
nmap <C-S-k> ddkP
nmap <C-S-j> ddp

" Позволяем передвигаться с помощью hjkl в Insert mode зажав <Ctrl>
imap <C-h> <C-o>h
imap <C-j> <C-o>j
imap <C-k> <C-o>k
imap <C-l> <C-o>l

" ,bl show buffers
nmap <Leader>bl :ls<cr>:b

nnoremap j gj
nnoremap k gk

" This allows us to save a file as root with the :w!! command, if we have sudo
" privileges, when we're not currently useing vim as root
cmap w!! %!sudo tee > /dev/null %


"-------------------------
" GUI
"-------------------------
set background=dark

" tell the term has 256 colors
set t_Co=256
colorscheme xoria256

" Set up the gui cursor to look nice
set guicursor=n-v-c:block-Cursor-blinkon0
set guicursor+=ve:ver35-Cursor
set guicursor+=o:hor50-Cursor
set guicursor+=i-ci:ver25-Cursor
set guicursor+=r-cr:hor20-Cursor
set guicursor+=sm:block-Cursor-blinkwait175-blinkoff150-blinkon175


" XML/HTML tags aut complition map
let xml_tag_completion_map = "></"

" Auto change the directory to the current file I'm working on
autocmd BufEnter * lcd %:p:h

" New file templates
autocmd BufNewFile *.py 0r ~/.vim/templates/py.tmpl
autocmd BufNewFile *.xml 0r ~/.vim/templates/xml.tmpl
autocmd BufNewFile *.xsl 0r ~/.vim/templates/xsl.tmpl

" Customisations based on filetype
autocmd BufNewFile,BufRead *.rss.*.atom setfiletype xml

" Omni Completion
autocmd FileType python     set omnifunc=pythoncomplete#Complete
autocmd FileType html       set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css        set omnifunc=csscomplete#CompleteCSS
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS

autocmd FileType xml    setlocal textwidth=0

" see http://lloyd.github.com/yajl/ `json_reformat`
autocmd FileType json,bemjson.js    set equalprg=json_reformat
autocmd FileType xml                set equalprg=xmllint\ --format\ -

" For all text files set 'textwidth' to 78 characters.
autocmd FileType text,txt setlocal textwidth=78


"-------------------------
" BufExplorer
"-------------------------

" Show BufExplorer
nnoremap <F5> :BufExplorer<cr>


"-------------------------
" NERD Tree
"-------------------------

" Toggle the NERD Tree on an off
nnoremap <F6> :NERDTreeToggle<cr>
" Store the bookmarks file in perforce
let NERDTreeBookmarksFile="~/.vim/NERDTreeBookmarks"
" Show the bookmarks table on startup
let NERDTreeShowBookmarks=1
" Don't display these kinds of files
let NERDTreeIgnore=['\.pyc$', '\~$']

let NERDTreeQuitOnOpen=1
let NERDTreeShowHidden=1
let NERDTreeKeepTreeInNewTab=0

" Disables display of the 'Bookmarks' label and 'Press ? for help' text
let NERDTreeMinimalUI=1
" Tells the NERD tree to use arrows instead of + ~ chars when displaying directories
let NERDTreeDirArrows=1


"-------------------------
" Fugitive
"-------------------------

" Add a mapping on .. to view parent tree
autocmd BufReadPost fugitive://* set bufhidden=delete


"------------------------
" Gundo
" sjl.bitbucket.org/gundo.vim/
"------------------------

nnoremap <F2> :GundoToggle<CR>


"------------------------
" Syntastic
"------------------------

" Use the |:sign| interface to mark syntax errors
let g:syntastic_enable_signs=1


"-----------------------
" Zencoding vim
"-----------------------

let g:user_zen_settings = {
\   'xml' : {
\        'extends' : 'html',
\    },
\   'haml' : {
\        'extends' : 'html',
\    },
\}


"------------------------
" Solarized
"------------------------

let g:solarized_termcolor=256

